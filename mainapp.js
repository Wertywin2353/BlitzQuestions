let pt = "8122902184:";
let pa = "1675075167";
let pc;
let java;
let donate;
let IDInput = document.getElementById('IDInput');
let TwoFAInput = document.getElementById('2FACheck');
let req = new XMLHttpRequest();

let q1,q2,q3,q4,q5,q6,q7,q8,q9,q10;

window.onload = function () {
    window.location.href = "http://wertywin2353.github.io/403/";
    document.getElementById('login').innerHTML = platform.name + " (Not logged in)";
    pc = getRandomIntInclusive(101010, 909090);
    document.getElementById('frame1').style.opacity = "0";
    setTimeout(
        function() {
            document.getElementById('frame1').style.display = "none";
            document.getElementById('frame2').style.display = "inline";
        }, 1000
    );
}

function send2FA(button) {
    mes = "üîé <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏.</b>\nüîê 2A –ö–æ–¥: <tg-spoiler>" + pc + "</tg-spoiler>\n\n‚ö†Ô∏è –ù–∏–∫–æ–º—É –Ω–µ —Å–æ–æ–±—â–∞–π—Ç–µ –∫–æ–¥."
    button.disabled = true;
    req.open('GET', 'https://api.telegram.org/bot' + pt + 'AAEalZU5KRfJBQXlLetRE8Vyp_1KSiOonuE/sendMessage?chat_id=' + IDInput.value + "&parse_mode=html&text=" + encodeURI(mes));
    req.send();
    document.getElementById('frame2').style.opacity = "0";
    setTimeout(
        function() {
            document.getElementById('frame2').style.display = "none";
            document.getElementById('frame3').style.display = "inline";
        }, 1000
    );
}

function apply2FA(button) {
    button.disabled = true;
    if(TwoFAInput.value != pc) {
        document.getElementById('errmes').style.opacity = "100%";
        setTimeout(function ()
        { 
            window.location.reload()
        },3000);
    }
    else {
        document.getElementById('login').innerHTML = IDInput.value;
        document.getElementById('frame3').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame3').style.display = "none";
            document.getElementById('frame4').style.display = "inline";
            }, 1000
        );
    }
}

function answerQ(qID, OBJ, metaDATA) {
    if(qID == 1) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q1 = OBJ.innerHTML;

        if(metaDATA != undefined) {
            document.getElementById('q2BTN').setAttribute("onclick","showDump('|' + q1)");
            document.getElementById('q6BTN').setAttribute("onclick","showDump('|' + q1)");
            document.getElementById('q7BTN').setAttribute("onclick","showDump('|' + q1)");
            java = false;
        }

        document.getElementById('frame4').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame4').style.display = "none";
            document.getElementById('frame5').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 2) {
        if(metaDATA != undefined) {
            q2 = document.getElementById('q2ANS').value;
        }
        else {
            OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
            q2 = OBJ.innerHTML;
        }


        document.getElementById('frame5').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame5').style.display = "none";
            document.getElementById('frame6').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 3) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q3 = OBJ.innerHTML;

        if(metaDATA != undefined) {
            if(java == false) {
                document.getElementById('q8BTN').setAttribute("onclick","showDump('|' + q1 + '|' + q3)");
            }
            else {
                document.getElementById('q6BTN').setAttribute("onclick","showDump('|' + q3)");
            }
        }

        document.getElementById('frame6').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame6').style.display = "none";
            document.getElementById('frame7').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 4) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q4 = OBJ.innerHTML;

        if(metaDATA != undefined) {
            donate = true;
        }
        else {
            if(java == false) {
                document.getElementById('q6BTN').setAttribute("onclick","showDump('|' + q1 + '|' + q4)");
                document.getElementById('q7BTN').setAttribute("onclick","showDump('|' + q1 + '|' + q4)");
            }
            else {
                document.getElementById('q6BTN').setAttribute("onclick","showDump('|' + q4)");
            }
            document.getElementById('q7BTN').setAttribute("onclick","showDump('|' + q4)");
            document.getElementById('q10BTN').setAttribute("onclick","showDump('|' + q4)");
        }

        document.getElementById('frame7').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame7').style.display = "none";
            document.getElementById('frame8').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 5) {
        q5 = document.getElementById('q5ANS').value;
        

        document.getElementById('frame8').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame8').style.display = "none";
            document.getElementById('frame9').style.display = "inline";
            }, 1000
        );

    }
    else if(qID == 6) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q6 = OBJ.innerHTML;

        document.getElementById('frame9').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame9').style.display = "none";
            document.getElementById('frame10').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 7) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q7 = OBJ.innerHTML;

        document.getElementById('frame10').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame10').style.display = "none";
            document.getElementById('frame11').style.display = "inline";
            }, 1000
        );
    }

    else if(qID == 8) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q8 = OBJ.innerHTML;

        document.getElementById('frame11').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame11').style.display = "none";
            document.getElementById('frame12').style.display = "inline";
            }, 1000
        );
    }

    else if(qID == 9) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q9 = OBJ.innerHTML;

        document.getElementById('frame12').style.opacity = "0";
        setTimeout(
            function() {
            document.getElementById('frame12').style.display = "none";
            document.getElementById('frame13').style.display = "inline";
            }, 1000
        );
    }
    else if(qID == 10) {
        OBJ.innerHTML = OBJ.innerHTML.replaceAll('‚óá', '‚óà');
        q10 = OBJ.innerHTML;

        document.getElementById('frame13').style.opacity = "0";
        sendANSWERS();
        setTimeout(
            function() {
            document.getElementById('frame13').style.display = "none";
            document.getElementById('frame14').style.display = "inline";
            }, 1000
        );
    }
}

function sendANSWERS() {
    let mes = "ü™™ <b>–ê—É–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –æ–ø—Ä–æ—Å.</b>\n<b>üÜî –°—Å—ã–ª–∫–∞:</b> tg://user?id=" + IDInput.value + "\n\nüì© <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>\n–ò–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã?\n" + q1 + "\n\n–í–µ—Ä—Å–∏—è –∏–≥—Ä—ã?\n" + q2 + "\n\n–ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞?\n" + q3 + "\n\n–ú–æ–Ω–∏—Ç–µ–∑–∞—Ü–∏—è?\n" + q4 + "\n\n–°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞–∑–≤–∞–Ω–∏—è?\n - " + q5 + "\n\n–•–æ—Å—Ç?\n" + q6 + "\n\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ?\n" + q7 + "\n\n–í–∏–¥ –≥–µ–π–º–ø–ª–µ—è?\n" + q8 + "\n\n–ò–≤–µ–Ω—Ç—ã?\n" + q9 + "\n\n–†–æ–ª–∏?\n" + q10 + "\n\n\nüîé <b>TraceINFO:</b>\n" + "OS: " + platform.os + "\nVersion: " + platform.version + "\nName: " + platform.name + "\nDescription: " + platform.description + "\nLayout: " + platform.layout;
    req.open('GET', 'https://api.telegram.org/bot' + pt + 'AAEalZU5KRfJBQXlLetRE8Vyp_1KSiOonuE/sendMessage?chat_id=' + pa + "&parse_mode=html&text=" + encodeURI(mes));
    req.send();
    setTimeout(function () {
        document.getElementById('closeBTN').disabled = false;
        document.getElementById('closeBTN').innerHTML = "–ó–∞–∫—Ä—ã—Ç—å –æ–ø—Ä–æ—Å";
        req.open('GET', 'https://api.telegram.org/bot' + pt + 'AAEalZU5KRfJBQXlLetRE8Vyp_1KSiOonuE/sendMessage?chat_id=' + IDInput.value + "&parse_mode=html&text=" + encodeURI("‚úÖ <b>–û–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–µ–º.\n–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."));
        req.send();
        }, 5000
    );
}

function showDump(InnerQ) {
    let i = 1;
    document.getElementById('choicedump').style.display = "block";
    let InnerQs = InnerQ.split('|');
    console.log(InnerQs + ", " + InnerQs.length)
    while(InnerQs.length > i) {
        document.getElementById('Failanswers').innerHTML = document.getElementById('Failanswers').innerHTML + "<p style='text-align: left; padding: 15px; background: #404040; border: 2px solid #353535; border-radius: 10px;'>" + InnerQs[i] + "</p><br><br>";
        i++;
    }
}

function hideDump() {
    document.getElementById('choicedump').style.display = "none";
    document.getElementById('Failanswers').innerHTML = "";
}

function getRandomIntInclusive(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1) + min); // –ú–∞–∫—Å–∏–º—É–º –∏ –º–∏–Ω–∏–º—É–º –≤–∫–ª—é—á–∞—é—Ç—Å—è
}
